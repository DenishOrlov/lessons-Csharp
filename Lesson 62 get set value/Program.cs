using System;

namespace Lesson_62_get_set_value
{   
    /*
     * Свойства (Properties)
     * 
     * Автоматические свойства
     *
     * Реализовали инкапсуляцию с помощью скрытия поля, и доступа к нему через специальный метод, ораничивающий значение, которое мы можем присвоить этому полю.
     * 
     * Геттеры и сеттеры мы можем модернизировать добавляя логику.
     *                      можем скрывать под private для доступа только из класса
     *                      можем использовать или только сеттер или только геттер
     *                      
     *  Для работы с полями класса лучше не использовать модификатор public, а всё таки скрывать в приват и делать доступ к значению через get, set.
     *      Так будет удобнее использовать логику, если захотим добавить.
     */
    class Point
    {
        public Point()
        {
           // Y1 = 43;
        }
        private int x;
        
        public void SetX(int x)  // Setter - метод при помощи которого в недоступном напрямую поле "х" класса Point мы можем записать определённый диапазон значений
        {
            if (x < 1)
            {
                this.x = 1;
                return;     // останавливает выполнение метода
            }
            if (x > 5)
            {
                this.x = 5;
                return;
            }
            this.x = x;
        }
        public int GetX() // Getter - метод который возвращает значение недоступного поля "х"
        {
            return x;
        }

        // сниппет в VS генерирует свойство
        private int y;        // У свойства и переменнной должен быть один тип данных int, float...

        public int Y          // Это наше свойство поля у
        {
            get               // Ацсессор возвращает значение
            { 
                return y; 
            }
            set               // Ацсессор записывает значение
            { 
                if (value < 1) // проверяем значение на заданный нами диапазон
                {
                    y = 1;
                    return;
                }
                if (value > 5)
                {
                    y = 5;
                    return;
                }
                y = value;    // value - ключевое слово, которое по факту - переменная. Для него не надо указывать тип данных, оно ведёт себя как параметр в методе
            }
        }
        
        //public int Y1        
        //{
        //    private set        // модификатор доступа "private" даст возможность работать с сеттером на уровне класса, например в конструкторе
        //                       // можно использовать, только если два ацессора get и set. 
        //    {
        //        if (value < 1) // проверяем значение на заданный нами диапазон
        //        {
        //            y = 1;
        //            return;
        //        }
        //        if (value > 5)
        //        {
        //            y = 5;
        //            return;
        //        }
        //        y = value;
        //    }
        //    get
        //    {
        //        return y;
        //    }
        //}

        //public int Y2           // Можно использовать или только set или только get
        //{
        //    set
        //    {
        //        y = 10; 
        //    }
        //}
        


        //private int z;

        public int Z { get; set; } // Автоматические СВОЙСТВА. Такое свойство Автоматически генерирует поле класса(переменную)


    }
    class Program
    {
        static void Main(string[] args)
        {
            Point point = new Point();
            
            point.SetX(0);

            
            int x = point.GetX();
            Console.WriteLine(x);

            point.Y = 10;           // Обращаемся к свойству поля класса, как буд-то к полю напрямую. Без доп. методов. В этом случае рабоает ацессор set
            int y = point.Y;        // рабоает ацессор get

            //Console.WriteLine(point.Y1); // выводим значение через свойство Y1, с приватным сеттером, куда передаётся значение из конструктора

            Point point2 = new Point();
            point2.Z = 12;
            y = point2.Z;

        }
    }
}
