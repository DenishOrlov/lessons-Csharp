using System;

namespace Lesson_55_Classes
{
    /*
         * ООП
         * класс - собственный тип данных/ Переменные внутри класса - называются полями/ у каждого поля есть свой модификатор доступа/ 
         *         Класс - это некий шаблон. По этому шаблону можно создать экзэмпляр. Сколько угодно. Ссылочный тип данных
         *         Так же у класса зачастую есть методы определяющие его поведение
         *         Обычно, к полям класса нет доступа на прямую, а только через методы или свойства класса. Сами же данные обычно скрыты
         *         
         * Обьект класса
         */

    enum Color
    {
        Red,
        White,
        Blue,
        Black,
        Yellow,
        Orange,
        Green
    }
    class Point                                     // Наш собственный клас. Вполне годится для описания пикселя, и можно составить из них изображения с помощью массива
    {
        public int x;                               // храним координату точки x
        public int y;                               // храним координату точки y
        public Color color;                         // Создаём переменную типа Color, для хранения цвета точки
    }
    class Program
    {   
        

        static void Main(string[] args)
        { 
            // Обьявляем новые экзэмпляры
            // Конструкция обьявления: класс(тип данных)_переменная(обьект класса) = new_Класс()

            Point p = new Point();                   //Point - класс, а значит ссылочный тип данных. Для создания нового экзэмпляра этого класса нужно выделить место
                                                     //в управляемой куче. Делаем это словом "new" и "Point()"

            //p = null;                                // Разрываем связь экзэмпляра обьекта с памятьюв управляемой куче
            
            p.x = 4;                
            p.y = 2;
            p.color = Color.Blue;
            Console.WriteLine($"X: {p.x} | Y: {p.y} | Color: {p.color}");
            /*
            p.Equals       // У класса так же есть стандартные методы, которые он наследует от типа данных object
            p.GetHashCode
            p.GetType
            p.ToString
            */


            Point p2 = new Point();                  // Это второй екземпляр класса Point, в другой области оперативной памяти и никак не связан с экзэмляром "р"
            p2.x = 2;
            p2.y = 6;
            Console.WriteLine($"{p2.x} , {p2.y}");



        }
    }
}
